syntax = "proto3";

package horizon.demo;

option java_multiple_files = true;

// Service definition
service UserService {
  // Creates a new user
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);

  // Gets a user by ID
  rpc GetUser(GetUserRequest) returns (GetUserResponse);

  // Updates an existing user
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);

  // Deletes a user
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);

  // Lists all users
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);

  // Validates user data
  rpc ValidateUser(ValidateUserRequest) returns (ValidateUserResponse);
}

// Request/Response messages
message CreateUserRequest {
  string name = 1;
  string email = 2;
}

message CreateUserResponse {
  string user_id = 1;
  bool success = 2;
  string message = 3;
}

message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  bool found = 1;
  string user_id = 2;
  string name = 3;
  string email = 4;
}

message ListUsersRequest {
  int32 limit = 1;
}

message ListUsersResponse {
  repeated UserInfo users = 1;
  int32 total = 2;
  int32 limit = 3;
}

message UserInfo {
  string id = 1;
  string name = 2;
  string email = 3;
}

// Update user messages
message UpdateUserRequest {
  string user_id = 1;
  string name = 2;
  string email = 3;
}

message UpdateUserResponse {
  bool success = 1;
  string message = 2;
  UserInfo user = 3;
}

// Delete user messages
message DeleteUserRequest {
  string user_id = 1;
  string auth_token = 2;  // Optional auth token
}

message DeleteUserResponse {
  bool success = 1;
  string message = 2;
  UserInfo deleted_user = 3;
}

// Validate user messages
message ValidateUserRequest {
  string name = 1;
  string email = 2;
}

message ValidateUserResponse {
  bool valid = 1;
  map<string, string> errors = 2;
}
